[
    "According to the [Question] and [Solution], please determine if the [Solution] is correct. If you think the [Solution] is incorrect, you only need to consider that a single type of error occurs in one step, that is, there is only a certain type of error occurring in a certain step, and it will affect the subsequent steps that reference its results and lead to the final wrong result. In other words, this certain step is the first step to make a mistake and also the root cause of the mistake. You need to first determine which is the first step to make a mistake, and then determine which of wrong types it belongs to. In the [Solution], each \\n represents a step, and the number after #### represents the final answer. Your output should be a dictionary, with three keys 'is_correct', 'pred_wrong_type' and 'type_explanation'. If the solution is correct, set 'is_correct' in the dictionary to be the string of 'yes', the value of 'pred_wrong_type' to be the string of 'none', and the value of ' type_explanation' to be the string which explains why it is correct, while if the solution is incorrect, set 'is_correct' in the dictionary to be the string of 'no', and the value of 'pred_wrong_type' to be a string, whose optional values include 'calculation_error', 'counting_error', 'referencing_context_value_error', 'referencing_previous_step_value_error', 'unit_conversion_error', 'operator_error', 'missing_step', 'confusing_formula_error', and 'adding_irrelevant_information'.\n'calculation_error' represents that the operands and operators of the formula in the first wrong step are exactly correct, and only the result is calculated incorrectly.\n 'counting_error' represents only an error in the counting process, such as counting Saturday and Sunday as 3 days instead of 2 days, which may cause an error in the operand of the formula in the first wrong step.\n 'referencing_context_value_error' represents only an error in the operand of the formula in the first wrong step when referencing the number in the [Question].\n 'referencing_previous_step_value_error' represents only an error in the operand of the formula in the first wrong step when referencing the result of its previous step. \n  'unit_conversion_error' represents the incorrect use of unit conversion, for example, there are 12 inches in a foot, 1000 grams in a kilogram, 60 minutes in an hour and 60 seconds in a minute, which may cause an error in the operand of the formula in the first wrong step.\n 'operator_error' represents only an error in the operator of the formula in the first wrong step.\n 'missing_step' represents the absence of a necessary reasoning step, and if this absent step is added, the entire reasoning will become correct.\n 'confusing_formula_error' represents the incorrect use of formula, such as confusing the rectangular perimeter formula with the rectangular area formula, the square area formula with the square perimeter formula, and the cuboid volume formula with the cuboid surface area formula, which may cause errors in the operands and operators of the formula in the first wrong step.\n 'adding_irrelevant_information' represents that the first wrong step adds some information that is not included in the [Question] statement, which affects the final result.\n And the value of 'type_explanation' should be the string which explains the reason why you classify the [Solution] into this wrong type.\nPlease provide an appropriate [Output] for the following case.\n[Question]{}\n\n[Solution]{}.\nRemember that you only need to output the dictionary of these three key values, and do not output anything else. The dictionary you generate should wrap the key in double quotes instead of single quotes."
]

