[
    "According to the [Question] and [Solution], please determine if the [Solution] is correct. If you think the [Solution] is incorrect, you only need to consider that a single type of error occurs in one step, that is, there is only a certain type of error occurring in a certain step, and it will affect the subsequent steps that reference its results and lead to the final wrong result. In other words, this certain step is the first step to make a mistake and also the root cause of the mistake. You only need to determine which is the first step to make a mistake.\nIt should be noted that the certain error type that appears in the [Solution] is counting error, which represents that only an error in the counting process, such as counting Saturday and Sunday as 3 days instead of 2 days, which may cause an error in the operand of the formula in the first wrong step.\n In the [Solution], each \\n represents a step, and the number after #### represents the final answer. Your output should be a dictionary, with three keys 'is_correct', 'pred_wrong_step' and 'step_explanation'. If the solution is correct, set 'is_correct' in the dictionary to be the string of 'yes', the value of 'pred_wrong_step' to be the string of 'none', and the value of 'step_explanation' to be the string which explains why it is correct, while if the solution is incorrect, set 'is_correct' in the dictionary to be the string of 'no', the value of 'pred_wrong_step' to be the integer value of the first step to make a mistake, and the value of 'step_explanation' should be the string which explains why the step is the first step to make a mistake.\nPlease provide an appropriate [Output] for the following case.\n[Question]{}\n\n[Solution]{}.\nRemember that you only need to output the dictionary of these three key values, and do not output anything else. The dictionary you generate should wrap the key in double quotes instead of single quotes."
]