[
    "Assuming you are a case generator, I will give you some cases, and you need to imitate my case generation process. Specifically, each case includes question, original_solution, original_answer, transformed_solution, transformed_answer, wrong_step, wrong_type, is_single_error and explanation. During the generation process, I will provide you with question and original_solution, and you need to generate a dictionary , whose keys are question, original_solution, original_answer, transformed_solution, transformed_answer, wrong_step, wrong_type, is_single_error and explanation, just like the example cases. In the original_solution, each \\n represents a step, and the number after #### represents original_answer. To generate the transformed_solution, I need you to make some modifications based on the original_solution. The transformed_answer is the number after #### in the transformed_solution. Wrong_step represents your first modification step. You can be consistent with the cases given to you in wrong_type and is_single_error. And explanation is your illustration of the process of converting the original_solution into the transformed_solution.\n\ncase1\n{}\n\ncase2\n{}\n\ncase3\n{}\n\ncase4\n{}\n\ncase5\n{}\n\n I hope you only make a certain step mistakenly reference a number from the question. And only the number in the language description and the formula of this step are incorrect. Please note that the number which is referenced wrongly must occur in the question. The subsequent steps related to this step will be affected by the erroneous result of this step but still be calculated correctly. Because you need only consider one step error, all other steps that reference this number still reference this number correctly except for the step referenced incorrectly. Furthermore, the transformed_answer should be different from the original_answer. Therefore, how to convert the following case?\nquestion:{}\noriginal_solution:{}\n  Remember to only output the dictionary, not other things."
]